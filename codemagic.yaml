definitions:
  env_versions: &env_versions
    xcode: 16.2
  triggering:
    push: &push_event
      events:
        - push
  scripts:
    - &initializeSubmodules
      name: Initialize Submodules
      script: make dependencies
    - &bundleInstall
      name: Bundle Install
      script: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - &parallelTasks
      name: Parallel Tasks
      script: defaults write com.apple.Xcode PBXNumberOfParallelBuildSubtasks 8
    - &buildAndTest
      name: Build and Test
      script: |
        bundle exec fastlane scan \
            --scheme Signal \
            --output_types junit \
            --skip_package_dependencies_resolution \
            --disable_package_automatic_updates \
            --xcargs '-test-timeouts-enabled YES -maximum-test-execution-time-allowance 60' \
            || formatFailures
      ignore_failure: true
workflows:
  # ios-m1-mac-pro-workflow:
  #   name: iOS Mac Pro Workflow
  #   instance_type: mac_pro
  #   environment:
  #     <<: *env_versions
  #   triggering:
  #     <<: *push_event
  #   scripts:
  #     - bundle update --bundler
  #     - *initializeSubmodules
  #     - *bundleInstall
  #     - *buildAndTest
  ios-mac-studio-m2-workflow:
    name: iOS Mac Studio M2 Max Workflow
    # instance_type: mac_mini_m1
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      - *buildAndTest
  ios-mac-mini-m2-parallel-workflow:
    name: iOS Mac mini M2 Parallel Workflow
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      - *parallelTasks
      - *buildAndTest
  ios-mac-mini-m2-workflow:
    name: iOS Mac mini M2 Workflow
    instance_type: mac_mini_m2
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      - *buildAndTest
  ios-mac-studio-m2-parallel-workflow:
    name: iOS iOS Mac Studio M2 Max Parallel Workflow
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - sysctl -n hw.ncpu
      - /usr/sbin/system_profiler SPHardwareDataType
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      - *parallelTasks
      - *buildAndTest
  ios-mac-mini-m4-workflow:
    name: iOS Mac mini M4 Workflow
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      - *buildAndTest
  ios-mac-mini-m4-pro-workflow:
    name: iOS Mac mini M4 Pro Workflow
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      - *buildAndTest

  ios-linux_x2:
    name: iOS Linux x2 Workflow
    instance_type: linux_x2
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      # Replace buildAndTest with Linux compatible commands, or
      # remove the build step if not applicable
      - name: Run Linux-compatible checks
        script: |
          echo "Running Linux-compatible tasks"
          # Example commands:
          make lint
          make test-linux
          

  ios-linux_x4:
    name: iOS Linux x4 Workflow
    instance_type: linux_x4
    environment:
      <<: *env_versions
    triggering:
      <<: *push_event
    scripts:
      - bundle update --bundler
      - *initializeSubmodules
      - *bundleInstall
      - name: Run Linux-compatible checks
        script: |
          echo "Running Linux-compatible tasks"
          # Example commands here as above
          make lint
          make test-linux
